/**
 * CTF Management API
 * API for managing CTF (Capture The Flag) games, teams, users, and services.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResultRequest model module.
 * @module model/ResultRequest
 * @version 1.1.0
 */
class ResultRequest {
    /**
     * Constructs a new <code>ResultRequest</code>.
     * @alias module:model/ResultRequest
     * @param teamId {String} Identifier of the team this result belongs to
     * @param score {Number} The score achieved by the team
     * @param rank {Number} The rank achieved by the team in this game
     */
    constructor(teamId, score, rank) { 
        
        ResultRequest.initialize(this, teamId, score, rank);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, teamId, score, rank) { 
        obj['team_id'] = teamId;
        obj['score'] = score;
        obj['rank'] = rank;
    }

    /**
     * Constructs a <code>ResultRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResultRequest} obj Optional instance to populate.
     * @return {module:model/ResultRequest} The populated <code>ResultRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResultRequest();

            if (data.hasOwnProperty('team_id')) {
                obj['team_id'] = ApiClient.convertToType(data['team_id'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResultRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResultRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResultRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['team_id'] && !(typeof data['team_id'] === 'string' || data['team_id'] instanceof String)) {
            throw new Error("Expected the field `team_id` to be a primitive type in the JSON string but got " + data['team_id']);
        }

        return true;
    }


}

ResultRequest.RequiredProperties = ["team_id", "score", "rank"];

/**
 * Identifier of the team this result belongs to
 * @member {String} team_id
 */
ResultRequest.prototype['team_id'] = undefined;

/**
 * The score achieved by the team
 * @member {Number} score
 */
ResultRequest.prototype['score'] = undefined;

/**
 * The rank achieved by the team in this game
 * @member {Number} rank
 */
ResultRequest.prototype['rank'] = undefined;






export default ResultRequest;

