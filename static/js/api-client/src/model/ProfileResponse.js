/**
 * CTF Management API
 * API for managing CTF (Capture The Flag) games, teams, users, and services.
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TeamHistory from './TeamHistory';

/**
 * The ProfileResponse model module.
 * @module model/ProfileResponse
 * @version 1.1.0
 */
class ProfileResponse {
    /**
     * Constructs a new <code>ProfileResponse</code>.
     * The response schema for a user&#39;s profile, including id, timestamps, team name, and team history.
     * @alias module:model/ProfileResponse
     * @param id {String} The unique identifier for the user.
     * @param createdAt {Date} The timestamp when the user profile was created.
     * @param teamName {String} The current name of the user's team.
     * @param teamRole {module:model/ProfileResponse.TeamRoleEnum} The current role of the user's team.
     */
    constructor(id, createdAt, teamName, teamRole) { 
        
        ProfileResponse.initialize(this, id, createdAt, teamName, teamRole);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, createdAt, teamName, teamRole) { 
        obj['id'] = id;
        obj['created_at'] = createdAt;
        obj['team_name'] = teamName;
        obj['team_role'] = teamRole;
    }

    /**
     * Constructs a <code>ProfileResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProfileResponse} obj Optional instance to populate.
     * @return {module:model/ProfileResponse} The populated <code>ProfileResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProfileResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('team_name')) {
                obj['team_name'] = ApiClient.convertToType(data['team_name'], 'String');
            }
            if (data.hasOwnProperty('team_role')) {
                obj['team_role'] = ApiClient.convertToType(data['team_role'], 'String');
            }
            if (data.hasOwnProperty('team_history')) {
                obj['team_history'] = ApiClient.convertToType(data['team_history'], [TeamHistory]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProfileResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProfileResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProfileResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['team_name'] && !(typeof data['team_name'] === 'string' || data['team_name'] instanceof String)) {
            throw new Error("Expected the field `team_name` to be a primitive type in the JSON string but got " + data['team_name']);
        }
        // ensure the json data is a string
        if (data['team_role'] && !(typeof data['team_role'] === 'string' || data['team_role'] instanceof String)) {
            throw new Error("Expected the field `team_role` to be a primitive type in the JSON string but got " + data['team_role']);
        }
        if (data['team_history']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['team_history'])) {
                throw new Error("Expected the field `team_history` to be an array in the JSON data but got " + data['team_history']);
            }
            // validate the optional field `team_history` (array)
            for (const item of data['team_history']) {
                TeamHistory.validateJSON(item);
            };
        }

        return true;
    }


}

ProfileResponse.RequiredProperties = ["id", "created_at", "team_name", "team_role"];

/**
 * The unique identifier for the user.
 * @member {String} id
 */
ProfileResponse.prototype['id'] = undefined;

/**
 * The timestamp when the user profile was created.
 * @member {Date} created_at
 */
ProfileResponse.prototype['created_at'] = undefined;

/**
 * The timestamp when the user profile was last updated.
 * @member {Date} updated_at
 */
ProfileResponse.prototype['updated_at'] = undefined;

/**
 * The current name of the user's team.
 * @member {String} team_name
 */
ProfileResponse.prototype['team_name'] = undefined;

/**
 * The current role of the user's team.
 * @member {module:model/ProfileResponse.TeamRoleEnum} team_role
 */
ProfileResponse.prototype['team_role'] = undefined;

/**
 * The list of teams the user has been part of, including the periods of membership.
 * @member {Array.<module:model/TeamHistory>} team_history
 */
ProfileResponse.prototype['team_history'] = undefined;





/**
 * Allowed values for the <code>team_role</code> property.
 * @enum {String}
 * @readonly
 */
ProfileResponse['TeamRoleEnum'] = {

    /**
     * value: "owner"
     * @const
     */
    "owner": "owner",

    /**
     * value: "captain"
     * @const
     */
    "captain": "captain",

    /**
     * value: "vice-captain"
     * @const
     */
    "vice-captain": "vice-captain",

    /**
     * value: "player"
     * @const
     */
    "player": "player",

    /**
     * value: "guest"
     * @const
     */
    "guest": "guest"
};



export default ProfileResponse;

